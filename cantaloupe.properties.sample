###########################################################################
# Sample Cantaloupe configuration file
#
# Copy this file to `cantaloupe.properties` and edit as desired. Then,
# launch Cantaloupe with the `-Dcantaloupe.config=cantaloupe.properties`
# argument.
#
# Most changes will take effect without restarting. Those that won't are
# marked with "!!".
###########################################################################

# !! Whether to enable HTTP access (http://), and on what TCP port.
http.enabled = true
http.port = 8182

# !! Whether to enable HTTPS access (https://), and on what TCP port.
https.enabled = false
https.port = 8183

# !! Available values are `JKS` and `PKCS12`.
https.key_store_type = JKS
https.key_store_password = myPassword
https.key_store_path = /path/to/keystore.jks
https.key_password = myPassword

# !! Configures HTTP Basic authentication.
auth.basic.enabled = false
auth.basic.username = myself
auth.basic.secret = mypassword

# Base URI to use for internal links, such as Link headers and JSON-LD @id
# values. This should only be used in reverse-proxy scenarios when
# X-Forwarded-* headers cannot be used instead (see the documentation).
base_uri =

# Normally, slashes in a URI path component (like an identifier) must be
# percent-encoded as "%2F". If your proxy is incapable of passing these
# through without decoding them, you can define an alternate character or
# character sequence to substitute for a slash. Supply the non-percent-
# encoded version here, and use the percent-encoded version in URLs.
#slash_substitute =

# Maximum number of image pixels to return in a response, to prevent
# overloading the server. Requests for more pixels than this will receive
# an HTTP 4xx response. Comment out or set to 0 for no maximum.
# Note: this is ignored when requesting an unmodified source image.
max_pixels = 400000000

# The name of a Ruby script containing various delegate methods. (See the
# website for more information.) This can be an absolute path, or a
# filename; if only a filename is specified, it will be searched for in the
# same folder as this file, and then the current working directory.
# Comment out or set blank to disable the delegate script mechanism.
#delegate_script = delegates.rb

# Helpful in development
print_stack_trace_on_error_pages = true

###########################################################################
# WATERMARKING
###########################################################################

# Whether to enable watermarking.
watermark.enabled = false

# Absolute path of the watermark image, which must be a .png file.
watermark.image = /path/to/watermark.png

# Allowed values: `top left`, `top center`, `top right`, `bottom left`,
# `bottom center`, `bottom right`, `left center`, `right center`, `center`.
watermark.position = bottom right

# Margin between the watermark and the edge of the image, in pixels.
watermark.inset = 10

# Output images less than this many pixels wide will not receive a watermark.
# Comment out or set to 0 to add the watermark regardless.
watermark.output_width_threshold = 400

# Output images less than this many pixels tall will not receive a watermark.
# Comment out or set to 0 to add the watermark regardless.
watermark.output_height_threshold = 300

###########################################################################
# ENDPOINTS
###########################################################################

endpoint.iiif.1.enabled = true

endpoint.iiif.2.enabled = true

# Controls the response Content-Disposition header for images. Allowed
# values are `inline`, `attachment`, and `none`.
endpoint.iiif.content_disposition = inline

###########################################################################
# RESOLVERS
###########################################################################

# Specifies one resolver to translate the identifier in the URL to an image
# source for all requests. Available values are `FilesystemResolver`,
# `HttpResolver`, `JdbcResolver`, and `AmazonS3Resolver`.
resolver.static = FilesystemResolver

# If true, `resolver.static` will be overridden, and the
# `get_resolver(identifier)` delegate script method will be used to select
# a resolver per-request.
resolver.delegate = false

#----------------------------------------
# FilesystemResolver
#----------------------------------------

# Tells FilesystemResolver how to look up files. Allowed values are
# `BasicLookupStrategy` and `ScriptLookupStrategy`. For
# ScriptLookupStrategy, a method named `get_pathname(identifier)` must be
# implemented in the delegate script.
FilesystemResolver.lookup_strategy = BasicLookupStrategy

# Server-side path that will be prefixed to the identifier in the URL.
# Trailing slash is important.
FilesystemResolver.BasicLookupStrategy.path_prefix = /home/myself/images/

# Server-side path or extension that will be suffixed to the identifier in
# the URL.
FilesystemResolver.BasicLookupStrategy.path_suffix =

#----------------------------------------
# HttpResolver
#----------------------------------------

# Tells HttpResolver how to look up resources. Allowed values are
# `BasicLookupStrategy` and `ScriptLookupStrategy`. For
# ScriptLookupStrategy, a method named `get_url(identifier)` must be
# implemented in the delegate script.
HttpResolver.lookup_strategy = BasicLookupStrategy

# URL that will be prefixed to the identifier in the request URL. Trailing
# slash is important.
HttpResolver.BasicLookupStrategy.url_prefix = http://localhost/images/

# Path, extension, query string, etc. that will be suffixed to the
# identifier in the request URL.
HttpResolver.BasicLookupStrategy.url_suffix =

# Used for HTTP Basic authentication.
HttpResolver.auth.basic.username =
HttpResolver.auth.basic.secret =

#----------------------------------------
# JdbcResolver
#----------------------------------------

# !!
JdbcResolver.url = jdbc:postgresql://localhost:5432/my_database
# !!
JdbcResolver.user = postgres
# !!
JdbcResolver.password = postgres

# !! Maximum number of connections allowed in the connection pool. A good
# starting point is (number of CPU cores * 2) + 1.
JdbcResolver.max_pool_size = 10

# !! Connection timeout in seconds.
JdbcResolver.connection_timeout = 10

# JavaScript function that takes in an unencoded identifier and returns
# the value that will be used in prepared statements.
JdbcResolver.function.identifier = function getDatabaseIdentifier(url_identifier) {\
      // return the un-altered identifier\
      return url_identifier;\
      // if the identifiers were stored in the database as\
      //"identifier-something", then we would return this instead:\
      // return url_identifier + "-something";\
  }

# JavaScript function that returns a media (MIME) type. If the media type is
# stored in the database, this can return an SQL statement to retrieve it, in
# which case the "SELECT" and "FROM" clauses should be in uppercase in order
# to be autodetected. If commented out, Cantaloupe will infer the media type
# from the identifier extension (if present).
JdbcResolver.function.media_type = function getMediaType() {\
      return "SELECT media_type " +\
          "FROM item " +\
          "WHERE filename = ?"\
  }

# SQL statement that selects the BLOB corresponding to the value returned by
# the getDatabaseIdentifier() function above.
JdbcResolver.lookup_sql = SELECT image \
    FROM item \
    WHERE filename = ?

#----------------------------------------
# AmazonS3Resolver
#----------------------------------------

# !! Access key ID and secret key associated with your AWS account.
# See: http://aws.amazon.com/security-credentials
AmazonS3Resolver.access_key_id =
AmazonS3Resolver.secret_key =

# !! Name of the bucket containing images to be served.
AmazonS3Resolver.bucket.name =

# !! Can be commented out or left blank.
# See: http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region
#AmazonS3Resolver.bucket.region = us-east-1

# Tells AmazonS3Resolver how to look up objects. Allowed values are
# `BasicLookupStrategy` and `ScriptLookupStrategy`. For
# ScriptLookupStrategy, a method named `get_s3_object_key(identifier)` must
# be implemented in the delegate script.
AmazonS3Resolver.lookup_strategy = BasicLookupStrategy

###########################################################################
# PROCESSORS
###########################################################################

# Image processors to use for various source formats. Available values are
# `Java2dProcessor`, `GraphicsMagickProcessor`, `ImageMagickProcessor`,
# `KakaduProcessor`, `OpenJpegProcessor`, ``JaiProcessor`, `PdfBoxProcessor`,
# and `FfmpegProcessor`.

# These extension-specific definitions are optional.
processor.avi = FfmpegProcessor
#processor.jpg = ImageMagickProcessor
#processor.jp2 = KakaduProcessor
#processor.jp2 = OpenJpegProcessor
processor.mov = FfmpegProcessor
processor.mp4 = FfmpegProcessor
processor.pdf = PdfBoxProcessor
processor.webm = FfmpegProcessor

# Fall back to this processor for any formats not assigned above.
processor.fallback = Java2dProcessor

#----------------------------------------
# FfmpegProcessor
#----------------------------------------

# Optional; overrides the PATH
#FfmpegProcessor.path_to_binaries = /usr/local/bin

#----------------------------------------
# GraphicsMagickProcessor
#----------------------------------------

# Optional; overrides the PATH
#GraphicsMagickProcessor.path_to_binaries = /usr/local/bin

#----------------------------------------
# ImageMagickProcessor
#----------------------------------------

# Optional; overrides the PATH
#ImageMagickProcessor.path_to_binaries = /usr/local/bin

#----------------------------------------
# JaiProcessor
#----------------------------------------

# JPEG output quality. Should be a number between 0-1 ending in "f"
JaiProcessor.jpg.quality = 0.7f

# TIFF output compression type. Available values are `LZW`, `Deflate`,
# `ZLib`, `JPEG`, and `PackBits`. Comment out or leave blank for no
# compression.
JaiProcessor.tif.compression = LZW

#----------------------------------------
# Java2dProcessor
#----------------------------------------

# Available values are `quality` and `speed`. `speed` is ~10-20% faster at
# the expense of visible aliasing at small scales.
Java2dProcessor.scale_mode = speed

# JPEG output quality. Should be a number between 0-1 ending in "f"
Java2dProcessor.jpg.quality = 0.7f

# TIFF output compression type. Available values are `LZW`, `Deflate`,
# `ZLib`, `JPEG`, and `PackBits`. Comment out or leave blank for no
# compression.
Java2dProcessor.tif.compression = LZW

#----------------------------------------
# KakaduProcessor
#----------------------------------------

# Optional; overrides the PATH
#KakaduProcessor.path_to_binaries = /usr/local/bin

# Available values are `jai` and `java2d`.
KakaduProcessor.post_processor = java2d

# Available values are `quality` and `speed`. `speed` is ~10-20% faster at
# the expense of visible aliasing at small scales.
KakaduProcessor.post_processor.java2d.scale_mode = speed

#----------------------------------------
# OpenJpegProcessor
#----------------------------------------

# Optional; overrides the PATH
#OpenJpegProcessor.path_to_binaries = /usr/local/bin

# Available values are `jai` and `java2d`.
OpenJpegProcessor.post_processor = java2d

# Available values are `quality` and `speed`. `speed` is ~10-20% faster at
# the expense of visible aliasing at small scales.
OpenJpegProcessor.post_processor.java2d.scale_mode = speed

#----------------------------------------
# PdfBoxProcessor
#----------------------------------------

# Sets the resolution of the PDF rasterization at a scale factor of 1.
# Requests for scales less than 0.5 or larger than 2 will automatically
# use a lower or higher factor of this.
PdfBoxProcessor.dpi = 72

# Available values are `quality` and `speed`. `speed` is ~10-20% faster at
# the expense of visible aliasing at small scales.
PdfBoxProcessor.post_processor.java2d.scale_mode = speed

###########################################################################
# CLIENT-SIDE CACHING
###########################################################################

# Whether to enable the response Cache-Control header.
cache.client.enabled = true

# Customize the response Cache-Control header. (This may be overridden by
# proxies.) Comment out to disable the Cache-Control header.
cache.client.max_age = 2592000
cache.client.shared_max_age =
cache.client.public = true
cache.client.private = false
cache.client.no_cache = false
cache.client.no_store = false
cache.client.must_revalidate = false
cache.client.proxy_revalidate = false
cache.client.no_transform = true

###########################################################################
# SERVER-SIDE CACHING
###########################################################################

# The only available value is `FilesystemCache`. Comment out or set blank
# to disable caching.
#cache.server = FilesystemCache

# If true, when the resolver reports that the requested source image has
# gone missing, all cached information relating to it (if any) will be
# deleted. (This is effectively always false when cache.server.resolve_first
# is also false.)
cache.server.purge_missing = false

# If true, the source image will be confirmed to exist before a cached copy
# is returned. If false, the cached copy will be returned without any
# checking. Resolving first is slower but safer.
# (This has no effect with the IIIF 1.1 endpoint -- it is effectively
# always true.)
cache.server.resolve_first = false

# !! Enables the cache worker, which periodically purges expired cache
# items in a low-priority background thread.
cache.server.worker.enabled = false

# The cache worker will wait this many seconds between purgings.
cache.server.worker.interval = 86400

#----------------------------------------
# FilesystemCache
#----------------------------------------

# If this directory does not exist, it will be created automatically.
FilesystemCache.pathname = /var/cache/cantaloupe

# Time before a cached image becomes stale and needs to be reloaded. Set to
# blank or 0 for "forever"
FilesystemCache.ttl_seconds = 2592000

# Levels of folder hierarchy. Deeper depth results in fewer files per
# directory. Set to 0 to disable subfolders.
# Purge the cache after changing this.
FilesystemCache.dir.depth = 3

# Number of characters in hierarchy directory names. Should be set to
# 16^n < [max number of directory entries your filesystem can deal with].
# Purge the cache after changing this.
FilesystemCache.dir.name_length = 2

#----------------------------------------
# JdbcCache
#----------------------------------------

# !!
JdbcCache.url = jdbc:postgresql://localhost:5432/cantaloupe
# !!
JdbcCache.user = postgres
# !!
JdbcCache.password =

# !! Maximum number of JDBC connections allowed in the pool. A good starting
# point is (# of CPU cores * 2) + 1.
JdbcCache.max_pool_size = 9

# !! Connection timeout in seconds.
JdbcCache.connection_timeout = 10

# These must be created manually; see the website documentation for the
# schemas.
JdbcCache.image_table = image_cache
JdbcCache.info_table = info_cache

# Time before a cached image becomes stale and needs to be reloaded. Set to
# blank or 0 for "forever"
JdbcCache.ttl_seconds = 2592000

###########################################################################
# LOGGING
###########################################################################

#----------------------------------------
# !! Application Log
#----------------------------------------

# `trace`, `debug`, `info`, `warn`, `error`, `all`, or `off`
log.application.level = debug

log.application.ConsoleAppender.enabled = true

log.application.FileAppender.enabled = false
log.application.FileAppender.pathname = /path/to/logs/cantaloupe.log

log.application.RollingFileAppender.enabled = false
log.application.RollingFileAppender.pathname = /path/to/logs/cantaloupe.log
log.application.RollingFileAppender.policy = TimeBasedRollingPolicy
log.application.RollingFileAppender.TimeBasedRollingPolicy.filename_pattern = /path/to/logs/cantaloupe-%d{yyyy-MM-dd}.log
log.application.RollingFileAppender.TimeBasedRollingPolicy.max_history = 30

# See the "SyslogAppender" section for a list of facilities:
# http://logback.qos.ch/manual/appenders.html
log.application.SyslogAppender.enabled = false
log.application.SyslogAppender.host =
log.application.SyslogAppender.port = 514
log.application.SyslogAppender.facility = LOCAL0

#----------------------------------------
# !! Access Log
#----------------------------------------

log.access.ConsoleAppender.enabled = true

log.access.FileAppender.enabled = false
log.access.FileAppender.pathname = /path/to/logs/access.log

log.access.RollingFileAppender.enabled = false
log.access.RollingFileAppender.pathname = /path/to/logs/access.log
log.access.RollingFileAppender.policy = TimeBasedRollingPolicy
log.access.RollingFileAppender.TimeBasedRollingPolicy.filename_pattern = /path/to/logs/access-%d{yyyy-MM-dd}.log
log.access.RollingFileAppender.TimeBasedRollingPolicy.max_history = 30

# See the "SyslogAppender" section for a list of facilities:
# http://logback.qos.ch/manual/appenders.html
log.access.SyslogAppender.enabled = false
log.access.SyslogAppender.host =
log.access.SyslogAppender.port = 514
log.access.SyslogAppender.facility = LOCAL0
